/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.edu.unijui.dataBase;

import br.edu.unijui.dataBase.xml.CriarXml;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.xml.transform.TransformerException;

/**
 *
 * @author desktop
 */
public class Painel extends javax.swing.JFrame {

    /**
     * Creates new form Painel
     */
    public Painel() {
        initComponents();
    }

    String itemSelecionado;
    DataBase db;
    String nomePessoa;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jlConsultaCarros = new javax.swing.JLabel();
        jlLocadora = new javax.swing.JLabel();
        jcbLocadora = new javax.swing.JComboBox<>();
        jbtConsultarLocadora = new javax.swing.JButton();
        jlCarrosDisponiveis = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtTabelaCarros = new javax.swing.JTable();
        jlNome = new javax.swing.JLabel();
        jbtAlugar = new javax.swing.JButton();
        jlNumero = new javax.swing.JLabel();
        jtfNomePessoa = new javax.swing.JTextField();
        jtfidCarro = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtTabelaPessoas = new javax.swing.JTable();
        jlNomeCliente = new javax.swing.JLabel();
        jbtPesquisarPessoas = new javax.swing.JButton();
        jlClientes = new javax.swing.JLabel();
        jbtLimparCarros = new javax.swing.JButton();
        jbtLimparPessoas = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jlConsultaCarros.setText("Consulta de Carros");

        jlLocadora.setText("Locadora");

        jcbLocadora.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3" }));

        jbtConsultarLocadora.setText("OK");
        jbtConsultarLocadora.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbtConsultarLocadoraMouseClicked(evt);
            }
        });

        jlCarrosDisponiveis.setText("Carros Disponíveis");

        jtTabelaCarros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Nº", "Marca", "Modelo", "Ano", "Placa", "Reservado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtTabelaCarros);

        jlNome.setText("Nome:");

        jbtAlugar.setText("Alugar");
        jbtAlugar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbtAlugarMouseClicked(evt);
            }
        });

        jlNumero.setText("Número:");

        jtTabelaPessoas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "CPF", "Endereço", "Carro", "CarroID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jtTabelaPessoas);

        jlNomeCliente.setText("Nome do Cliente");

        jbtPesquisarPessoas.setText("Listar Clientes");
        jbtPesquisarPessoas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbtPesquisarPessoasMouseClicked(evt);
            }
        });

        jlClientes.setText("Clientes");

        jbtLimparCarros.setText("Limpar");
        jbtLimparCarros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbtLimparCarrosMouseClicked(evt);
            }
        });

        jbtLimparPessoas.setText("Limpar");
        jbtLimparPessoas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbtLimparPessoasMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlNumero)
                            .addComponent(jlNome))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtfidCarro, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
                            .addComponent(jtfNomePessoa))
                        .addGap(18, 18, 18)
                        .addComponent(jbtAlugar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jcbLocadora, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtConsultarLocadora)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtLimparCarros))
                    .addComponent(jlLocadora, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlCarrosDisponiveis))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlNomeCliente)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jbtPesquisarPessoas)
                        .addGap(18, 18, 18)
                        .addComponent(jbtLimparPessoas))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(349, 349, 349)
                .addComponent(jlConsultaCarros)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jlClientes)
                .addGap(217, 217, 217))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlConsultaCarros)
                    .addComponent(jlClientes))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlLocadora)
                    .addComponent(jlNomeCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbLocadora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtConsultarLocadora)
                    .addComponent(jbtLimparCarros))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtPesquisarPessoas)
                    .addComponent(jbtLimparPessoas))
                .addGap(13, 13, 13)
                .addComponent(jlCarrosDisponiveis)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlNome)
                            .addComponent(jtfNomePessoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbtAlugar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlNumero)
                            .addComponent(jtfidCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(78, 78, 78))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 546, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtConsultarLocadoraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtConsultarLocadoraMouseClicked
        // TODO add your handling code here:
       
        itemSelecionado = jcbLocadora.getSelectedItem().toString();
            
     
        try {
            /*Cria um objeto da classe DataBase para estabelecer uma conexão 
              com o banco de dados
             */
            db = new DataBase();

            Painel pn = new Painel();
            
            //verifica se a conexão foi estabelecida
            if (db.getConnection() != null) {
                // Instanciando o objeto preparedStatement (pstmt)
                PreparedStatement pstmt = db.getConnection().prepareStatement("SELECT * FROM carro WHERE locadoraID = ?  ");              
                // Setando o valor ao parâmetro 
                pstmt.setString(1, itemSelecionado);
                // Executando a consulta
                ResultSet resultSet = pstmt.executeQuery();
                //Obtém os metadados do resultado
                ResultSetMetaData metaData = resultSet.getMetaData();
                //monta as colunas de resultado
                int numberOfColumns = metaData.getColumnCount();
                System.out.println("clientes:");
                for (int i = 1; i <= numberOfColumns; i++) {
                    System.out.printf("%-8s\t", metaData.getColumnName(i));
                }
                System.out.println();

                //percorre os dados retornados pela consulta exibindo-os
                
                while (resultSet.next()) {
                    for (int i = 1; i <= numberOfColumns; i++) {
                        System.out.printf("%-8s\t", resultSet.getObject(i));
                    }
                    System.out.println();
                    
                    
                    Carro carro = new Carro (resultSet);
                    
                    DefaultTableModel dtmTabela = (DefaultTableModel) jtTabelaCarros.getModel();
                    Object[] dados = {carro.getId(), carro.getMarca(), carro.getModelo(), carro.getAno(), carro.getPlaca(), carro.getStatus()};
                    
                   /* dtmTabela.setRowCount(0); */
                    dtmTabela.addRow(dados);
                   
                     System.out.println("carro" + carro.locadoraID);
                }

                resultSet.close();
                pstmt.close();
                //encerra a conexão com o banco de dados
                
            }

        } catch (SQLException ex) {
            System.out.println(ex);
        }
        
        
        
        
        
        
        
    }//GEN-LAST:event_jbtConsultarLocadoraMouseClicked

    private void jbtAlugarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtAlugarMouseClicked
        // TODO add your handling code here:
         String idCarro = jtfidCarro.getText();
         String NomePessoa = jtfNomePessoa.getText();
         
        PreparedStatement pstmt;
        try {
            pstmt = db.getConnection().prepareStatement("update carro set reservado = 'Sim' where id = ?");
         
                // Setando o valor ao parâmetro 
                pstmt.setString(1, idCarro);
          
                
                pstmt.executeUpdate();
                             
            
            pstmt = db.getConnection().prepareStatement("update pessoa set carroID = ? where nome = ?");
         
                              
                pstmt.setString(1, idCarro);
         
                // Setando o valor ao parâmetro 
                pstmt.setString(2,NomePessoa);
          
                
                pstmt.executeUpdate();
                
        } catch (SQLException ex) {
            Logger.getLogger(Painel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_jbtAlugarMouseClicked

    private void jbtLimparCarrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtLimparCarrosMouseClicked
        // TODO add your handling code here:
        DefaultTableModel dtmTabela = (DefaultTableModel) jtTabelaCarros.getModel();
        dtmTabela.setRowCount(0);
        
    }//GEN-LAST:event_jbtLimparCarrosMouseClicked

    private void jbtPesquisarPessoasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtPesquisarPessoasMouseClicked
        // TODO add your handling code here:        
        try {
            /*Cria um objeto da classe DataBase para estabelecer uma conexão 
              com o banco de dados
             */
            db = new DataBase();

            Painel pn = new Painel();
            
            ArrayList listaPessoas = new ArrayList<Pessoa>();
            
            //verifica se a conexão foi estabelecida
            if (db.getConnection() != null) {
                // Instanciando o objeto preparedStatement (pstmt)
                PreparedStatement pstmt = db.getConnection().prepareStatement("SELECT * FROM pessoa");
  
                // Executando a consulta
                ResultSet resultSet = pstmt.executeQuery();

                //Obtém os metadados do resultado
                ResultSetMetaData metaData = resultSet.getMetaData();
                //monta as colunas de resultado
                int numberOfColumns = metaData.getColumnCount();
                System.out.println("clientes:");
                for (int i = 1; i <= numberOfColumns; i++) {
                    System.out.printf("%-8s\t", metaData.getColumnName(i));
                }
                System.out.println();

                //percorre os dados retornados pela consulta exibindo-os
                
                while (resultSet.next()) {
                    for (int i = 1; i <= numberOfColumns; i++) {
                        System.out.printf("%-8s\t", resultSet.getObject(i));
                    }
                    System.out.println();
                    
                    
                    Pessoa pessoa = new Pessoa (resultSet);
                    listaPessoas.add(pessoa);
                    
                    DefaultTableModel dtmTabela = (DefaultTableModel) jtTabelaPessoas.getModel();
                    Object[] dadosPessoa = {pessoa.getId(), pessoa.getNome(), pessoa.getCpf(), pessoa.getEndereco(), pessoa.getCarro()};
                    
                   /* dtmTabela.setRowCount(0); */
                    dtmTabela.addRow(dadosPessoa);
    
                }
                
               // CriarXml.criarXml(listaPessoas);

                resultSet.close();
                pstmt.close();
                //encerra a conexão com o banco de dados
                
            }

        } catch (SQLException ex) {
            System.out.println(ex);
        }
        
    }//GEN-LAST:event_jbtPesquisarPessoasMouseClicked

    private void jbtLimparPessoasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtLimparPessoasMouseClicked
        // TODO add your handling code here:
        
        DefaultTableModel dtmTabela = (DefaultTableModel) jtTabelaPessoas.getModel();
        dtmTabela.setRowCount(0);
    }//GEN-LAST:event_jbtLimparPessoasMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Painel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Painel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Painel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Painel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Painel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtAlugar;
    private javax.swing.JButton jbtConsultarLocadora;
    private javax.swing.JButton jbtLimparCarros;
    private javax.swing.JButton jbtLimparPessoas;
    private javax.swing.JButton jbtPesquisarPessoas;
    private javax.swing.JComboBox<String> jcbLocadora;
    private javax.swing.JLabel jlCarrosDisponiveis;
    private javax.swing.JLabel jlClientes;
    private javax.swing.JLabel jlConsultaCarros;
    private javax.swing.JLabel jlLocadora;
    private javax.swing.JLabel jlNome;
    private javax.swing.JLabel jlNomeCliente;
    private javax.swing.JLabel jlNumero;
    private javax.swing.JTable jtTabelaCarros;
    private javax.swing.JTable jtTabelaPessoas;
    private javax.swing.JTextField jtfNomePessoa;
    private javax.swing.JTextField jtfidCarro;
    // End of variables declaration//GEN-END:variables
}
